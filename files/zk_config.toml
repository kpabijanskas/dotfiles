[notebook]
dir = "~/notes"

[note]
language = "en"
default-title = "Untitled"
filename = "{{id}}"
extension = "md"
template = "default.md"
id-charset = "alphanum"
id-length = 4
id-case = "lower"

[extra]

[group.daily]
paths = ["journal/daily"]
[group.daily.note]
filename = "{{ title }}"
template = "daily.md"

[group.weekly]
paths = ["journal/weekly"]
[group.weekly.note]
filename = "{{ title }}"
template = "weekly.md"

[group.monthly]
paths = ["journal/monthly"]
[group.monthly.note]
filename = "{{ title }}"
template = "monthly.md"

[group.yearly]
paths = ["journal/yearly"]
[group.yearly.note]
filename = "{{ title }}"
template = "yearly.md"

[format.markdown]
link-format = "[[{{path}}|{{title}}]]"
hashtags = true

[tool]
editor = "hx"
fzf-preview = "bat -p --color always {-1}"


[lsp]

[lsp.diagnostics]
wiki-title = "hint"
dead-link = "error"

[lsp.completion]

[filter]

[alias]
# Open inbox
i = 'zk edit inbox'
# Add an item to the main group 
n = 'zk new --title=(string join " " $argv)'
# New Work Project
npw = 'zk new --template=wproject.md --title=(string join " " $argv)'
# New Personal Project
npp = 'zk new --template=pproject.md --title=(string join " " $argv)'
# List and edit non-journal and non-project
e = 'zk edit --interactive -t "NOT journal" -t "NOT project"'
# List and edit all
ea = 'zk edit --interactive'
# Edit daily notes
d = """
  set DATE $argv
  test "$DATE" != "" || set DATE $(date "+%Y-%m-%d")
  echo $DATE|grep -Eq '^[0-9]{4}-[0-9]{2}-[0-9]{2}$' || begin; echo "bad date format"; exit 1; end
  set DATE $(date --date=$DATE "+%Y-%m-%d")
  set VARS $(dategenforzk -txt $DATE)
  zk new --no-input --title=$DATE --extra=$VARS journal/daily
"""
# Edit tomorrows note (special common daily notes case)
t = """
  set DATE $(date --date=tomorrow "+%Y-%m-%d")
  set VARS $(dategenforzk -txt $DATE)
  zk new --no-input --title=$DATE --extra=$VARS journal/daily
"""
# Edit weekly notes
w = """
  set DATE $argv
  test "$DATE" != "" || set DATE $(date "+%Y-W%U")
  echo $DATE|grep -Eq '^[0-9]{4}-W[0-9]{2}$' || begin; echo "bad date format"; exit 1; end
  set VARS $(dategenforzk -txt $DATE)
  zk new --no-input --title=$DATE --extra=$VARS journal/weekly
"""
# Edit monthly notes
m = """
  set DATE $argv
  test "$DATE" != "" || set DATE $(date "+%Y-%m")
  echo $DATE|grep -Eq '^[0-9]{4}-[0-9]{2}$' || begin; echo "bad date format"; exit 1; end
  set DATE $(date --date=$DATE-01 "+%Y-%m")
  set VARS $(dategenforzk -txt $DATE)
  zk new --no-input --title=$DATE --extra=$VARS journal/monthly
"""
# Edit yearly notes
y = """
  set DATE $argv
  test "$DATE" != "" || set DATE $(date "+%Y")
  set DATE $(date --date=$DATE-01-01 "+%Y")
  set VARS $(dategenforzk -txt $DATE)
  zk new --no-input --title=$DATE --extra=$VARS journal/yearly
"""
last = 'zk edit --limit 1 --sort modified- (string join " " $argv)'
conf = '$EDITOR ~/.config/zk/config.toml'
sync = 'git-sync -ns'
rm = 'rm $argv.md || rm $argv'
# All active projects
pa = 'zk edit --tag project -t active --interactive'
# All parked projects
pap = 'zk edit --tag project -t parked --interactive'
# All archived projects
paa = 'zk edit --tag project -t archived --interactive'
# Work active projects
pw = 'zk edit --tag project --tag work -t active --interactive'
# Personal active projects
pp = 'zk edit --tag project --tag personal -t active --interactive'
# Work parked projects
pwp = 'zk edit --tag project --tag work -t parked --interactive'
# Personal parked projects
ppp = 'zk edit --tag project --tag personal -t parked --interactive'
# Work archived projects
pwa = 'zk edit --tag project --tag work -t archived --interactive'
# Personal archived projects
ppa = 'zk edit --tag project --tag personal-t archived --interactive'
# Archive project
parchive = """
   zk list --format=path --interactive -t "project" -t "NOT archived" | xargs -I {} yq -i --front-matter=process '.tags[] |= sub("(active|parked)", "archive")' {}
"""
# Park project
ppark = """
   zk list --format=path --interactive -t "project" -t "NOT parked" | xargs -I {} yq -i --front-matter=process '.tags[] |= sub("(active|archived)", "parked")' {}
"""
# Activate project
pactivate = """
   zk list --format=path --interactive -t "project" -t "NOT active" | xargs -I {} yq -i --front-matter=process '.tags[] |= sub("(parked|archived)", "active")' {}
"""
